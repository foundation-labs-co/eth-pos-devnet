version: '3.8'

services:
  redis_db:
    image: 'redis:alpine'
    ports:
      - 6379:6379
    command: redis-server
    volumes:
      - ./redis-data:/data
    networks:
      - proxy-network

  db:
    image: postgres:15
    restart: always
    container_name: 'postgres'
    command: postgres -c 'max_connections=200'
    environment:
      POSTGRES_PASSWORD: 'q3Yt9N7RUj4XL75JbY30ppESkFOvL'
      POSTGRES_USER: 'postgres'
      POSTGRES_DB: 'blockscout'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - 5490:5432
    networks:
      - proxy-network

  backend:
    depends_on:
      - smart-contract-verifier
      - redis_db
      - db
    image: blockscout/blockscout:latest
    restart: always
    container_name: 'backend'
    command: sh -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      - ./blockscout-env/common-blockscout.env
    environment:
      ETHEREUM_JSONRPC_VARIANT: 'geth'
      BLOCK_TRANSFORMER: 'base'
      SECRET_KEY_BASE: '56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN'
    ports:
      - 8100:4000
    volumes:
      - ./logs/:/app/logs/
      - ../config/genesis.json:/app/config/genesis.json
    networks:
      - proxy-network

  smart-contract-verifier:
    image: ghcr.io/blockscout/smart-contract-verifier:${SMART_CONTRACT_VERIFIER_DOCKER_TAG:-latest}
    restart: always
    platform: linux/amd64
    env_file:
      - ./blockscout-env/common-smart-contract-verifier.env
    ports:
      - 8043:8050
    networks:
      - proxy-network

  visualizer:
    image: ghcr.io/blockscout/visualizer:${VISUALIZER_DOCKER_TAG:-latest}
    restart: always
    env_file:
      - ./blockscout-env/common-visualizer.env
    ports:
      - 8050:8050
    networks:
      - proxy-network

  frontend:
    image: ghcr.io/blockscout/frontend:latest
    pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: 'frontend'
    env_file:
      -  ./blockscout-env/common-frontend.env
    ports:
      - 3000:3000
    networks:
      - proxy-network

  stats-db:
    image: postgres:15
    restart: always
    container_name: 'stats-postgres'
    command: postgres -c 'max_connections=200'
    environment:
        POSTGRES_PASSWORD: ''
        POSTGRES_USER: 'postgres'
        POSTGRES_HOST_AUTH_METHOD: 'trust'
    ports:
      - 7433:5432
    volumes:
      - ./stats-db-data:/var/lib/postgresql/data/
    networks:
      - proxy-network

  stats:
    image: ghcr.io/blockscout/stats:${STATS_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    container_name: 'stats'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    env_file:
      -  ./blockscout-env/common-stats.env
    environment:
      - STATS__DB_URL=postgres://postgres:@stats-db:5432/stats
      - STATS__BLOCKSCOUT_DB_URL=postgresql://postgres:q3Yt9N7RUj4XL75JbY30ppESkFOvL@db:5432/blockscout?ssl=false
      - STATS__CREATE_DATABASE=true
      - STATS__RUN_MIGRATIONS=true
    ports:
      - 8153:8050
    networks:
      - proxy-network

  proxy:
    image: nginx
    container_name: proxy
    depends_on:
      - backend
      - frontend
      - stats
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - "./proxy:/etc/nginx/templates"
    environment:
      BACK_PROXY_PASS: ${BACK_PROXY_PASS:-http://backend:4000}
      FRONT_PROXY_PASS: ${FRONT_PROXY_PASS:-http://frontend:3000}
    ports:
      - target: 80
        published: 80
      - target: 8080
        published: 8088
      - target: 8081
        published: 8089
    networks:
      - proxy-network

networks:
  proxy-network:
    external: true
    name: custom_network